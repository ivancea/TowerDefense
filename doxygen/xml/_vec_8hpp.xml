<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_vec_8hpp" kind="file" language="C++">
    <compoundname>Vec.hpp</compoundname>
    <includes local="no">cmath</includes>
    <includedby refid="_fire_entity_8h" local="yes">FireEntity.h</includedby>
    <includedby refid="_tower_8h" local="yes">Tower.h</includedby>
    <includedby refid="_enemy_8h" local="yes">Enemy.h</includedby>
    <includedby refid="_game_8h" local="yes">Game.h</includedby>
    <includedby refid="map_creator_2main_8cpp" local="yes">main.cpp</includedby>
    <includedby refid="_flame_ring_8h" local="yes">FlameRing.h</includedby>
    <includedby refid="_rocket_8h" local="yes">Rocket.h</includedby>
    <includedby refid="_map_manager_8h" local="yes">MapManager.h</includedby>
    <includedby refid="_tooltip_8h" local="yes">Tooltip.h</includedby>
    <includedby refid="_explosion_entity_8h" local="yes">ExplosionEntity.h</includedby>
    <includedby refid="_sniper_tower_8h" local="yes">SniperTower.h</includedby>
    <includedby refid="_laser_entity_8h" local="yes">LaserEntity.h</includedby>
    <includedby refid="_bullet_8h" local="yes">Bullet.h</includedby>
    <incdepgraph>
      <node id="1650">
        <label>cmath</label>
      </node>
      <node id="1649">
        <label>Vec.hpp</label>
        <link refid="Vec.hpp"/>
        <childnode refid="1650" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1679">
        <label>Game.cpp</label>
        <link refid="_game_8cpp"/>
      </node>
      <node id="1653">
        <label>SniperTower.cpp</label>
        <link refid="_sniper_tower_8cpp"/>
      </node>
      <node id="1662">
        <label>BasicTowerManager.cpp</label>
        <link refid="_basic_tower_manager_8cpp"/>
      </node>
      <node id="1689">
        <label>main.cpp</label>
        <link refid="map_creator_2main_8cpp"/>
      </node>
      <node id="1660">
        <label>FlameRingTower.h</label>
        <link refid="_flame_ring_tower_8h"/>
        <childnode refid="1661" relation="include">
        </childnode>
        <childnode refid="1662" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
      </node>
      <node id="1663">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1669">
        <label>SniperTower.h</label>
        <link refid="_sniper_tower_8h"/>
        <childnode refid="1666" relation="include">
        </childnode>
        <childnode refid="1653" relation="include">
        </childnode>
        <childnode refid="1662" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
      </node>
      <node id="1678">
        <label>InmortalEnemy.cpp</label>
        <link refid="_inmortal_enemy_8cpp"/>
      </node>
      <node id="1682">
        <label>InhibitorEnemy.h</label>
        <link refid="_inhibitor_enemy_8h"/>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
      </node>
      <node id="1680">
        <label>InhibitorEnemy.cpp</label>
        <link refid="_inhibitor_enemy_8cpp"/>
      </node>
      <node id="1665">
        <label>RocketTower.h</label>
        <link refid="_rocket_tower_8h"/>
        <childnode refid="1666" relation="include">
        </childnode>
        <childnode refid="1667" relation="include">
        </childnode>
        <childnode refid="1662" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
      </node>
      <node id="1672">
        <label>SoldierTower.cpp</label>
        <link refid="_soldier_tower_8cpp"/>
      </node>
      <node id="1667">
        <label>RocketTower.cpp</label>
        <link refid="_rocket_tower_8cpp"/>
      </node>
      <node id="1690">
        <label>MapManager.h</label>
        <link refid="_map_manager_8h"/>
        <childnode refid="1689" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
      </node>
      <node id="1694">
        <label>ExplosionEntity.h</label>
        <link refid="_explosion_entity_8h"/>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1677" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
      </node>
      <node id="1683">
        <label>Enemy.h</label>
        <link refid="_enemy_8h"/>
        <childnode refid="1658" relation="include">
        </childnode>
        <childnode refid="1659" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1686" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
      </node>
      <node id="1688">
        <label>InmortalEnemy.h</label>
        <link refid="_inmortal_enemy_8h"/>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
      </node>
      <node id="1651">
        <label>Vec.hpp</label>
        <link refid="Vec.hpp"/>
        <childnode refid="1652" relation="include">
        </childnode>
        <childnode refid="1655" relation="include">
        </childnode>
        <childnode refid="1683" relation="include">
        </childnode>
        <childnode refid="1658" relation="include">
        </childnode>
        <childnode refid="1689" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1690" relation="include">
        </childnode>
        <childnode refid="1692" relation="include">
        </childnode>
        <childnode refid="1694" relation="include">
        </childnode>
        <childnode refid="1669" relation="include">
        </childnode>
        <childnode refid="1695" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
      </node>
      <node id="1664">
        <label>TowerManager.cpp</label>
        <link refid="_tower_manager_8cpp"/>
      </node>
      <node id="1687">
        <label>Bullet.h</label>
        <link refid="_bullet_8h"/>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
      </node>
      <node id="1657">
        <label>TowerManager.h</label>
        <link refid="_tower_manager_8h"/>
        <childnode refid="1658" relation="include">
        </childnode>
        <childnode refid="1666" relation="include">
        </childnode>
        <childnode refid="1664" relation="include">
        </childnode>
      </node>
      <node id="1681">
        <label>TowerType.cpp</label>
        <link refid="_tower_type_8cpp"/>
      </node>
      <node id="1659">
        <label>Enemy.cpp</label>
        <link refid="_enemy_8cpp"/>
      </node>
      <node id="1661">
        <label>FlameRingTower.cpp</label>
        <link refid="_flame_ring_tower_8cpp"/>
      </node>
      <node id="1673">
        <label>Bullet.cpp</label>
        <link refid="_bullet_8cpp"/>
      </node>
      <node id="1658">
        <label>Game.h</label>
        <link refid="_game_8h"/>
        <childnode refid="1659" relation="include">
        </childnode>
        <childnode refid="1660" relation="include">
        </childnode>
        <childnode refid="1664" relation="include">
        </childnode>
        <childnode refid="1665" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1669" relation="include">
        </childnode>
        <childnode refid="1670" relation="include">
        </childnode>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1654" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
        <childnode refid="1677" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
      </node>
      <node id="1654">
        <label>FireEntity.cpp</label>
        <link refid="_fire_entity_8cpp"/>
      </node>
      <node id="1675">
        <label>Tower.cpp</label>
        <link refid="_tower_8cpp"/>
      </node>
      <node id="1677">
        <label>ExplosionEntity.cpp</label>
        <link refid="_explosion_entity_8cpp"/>
      </node>
      <node id="1686">
        <label>BasicEnemy.h</label>
        <link refid="_basic_enemy_8h"/>
        <childnode refid="1670" relation="include">
        </childnode>
        <childnode refid="1679" relation="include">
        </childnode>
      </node>
      <node id="1676">
        <label>LaserEntity.cpp</label>
        <link refid="_laser_entity_8cpp"/>
      </node>
      <node id="1684">
        <label>FlameRing.h</label>
        <link refid="_flame_ring_8h"/>
        <childnode refid="1661" relation="include">
        </childnode>
        <childnode refid="1674" relation="include">
        </childnode>
      </node>
      <node id="1692">
        <label>Tooltip.h</label>
        <link refid="_tooltip_8h"/>
        <childnode refid="1693" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
      </node>
      <node id="1656">
        <label>TowerType.h</label>
        <link refid="_tower_type_8h"/>
        <childnode refid="1657" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
      </node>
      <node id="1671">
        <label>SoldierTower.h</label>
        <link refid="_soldier_tower_8h"/>
        <childnode refid="1662" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
      </node>
      <node id="1691">
        <label>MapManager.cpp</label>
        <link refid="_map_manager_8cpp"/>
      </node>
      <node id="1652">
        <label>FireEntity.h</label>
        <link refid="_fire_entity_8h"/>
        <childnode refid="1653" relation="include">
        </childnode>
        <childnode refid="1654" relation="include">
        </childnode>
      </node>
      <node id="1695">
        <label>LaserEntity.h</label>
        <link refid="_laser_entity_8h"/>
        <childnode refid="1653" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
      </node>
      <node id="1668">
        <label>Rocket.cpp</label>
        <link refid="_rocket_8cpp"/>
      </node>
      <node id="1674">
        <label>FlameRing.cpp</label>
        <link refid="_flame_ring_8cpp"/>
      </node>
      <node id="1670">
        <label>BasicEnemy.cpp</label>
        <link refid="_basic_enemy_8cpp"/>
      </node>
      <node id="1693">
        <label>Tooltip.cpp</label>
        <link refid="_tooltip_8cpp"/>
      </node>
      <node id="1666">
        <label>BasicTowerManager.h</label>
        <link refid="_basic_tower_manager_8h"/>
        <childnode refid="1662" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
      </node>
      <node id="1685">
        <label>Rocket.h</label>
        <link refid="_rocket_8h"/>
        <childnode refid="1665" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
      </node>
      <node id="1655">
        <label>Tower.h</label>
        <link refid="_tower_8h"/>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1658" relation="include">
        </childnode>
        <childnode refid="1660" relation="include">
        </childnode>
        <childnode refid="1665" relation="include">
        </childnode>
        <childnode refid="1669" relation="include">
        </childnode>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_vec3" prot="public">Vec3</innerclass>
    <innerclass refid="struct_vec2" prot="public">Vec2</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_vec_8hpp_1ab2b69827ad7e42df1b74a25da1b3db8d" prot="public" static="no">
        <type><ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; float &gt;</type>
        <definition>typedef Vec3&lt;float&gt; Vec3f</definition>
        <argsstring></argsstring>
        <name>Vec3f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="92" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_vec_8hpp_1ac7030f700e7e312e526c66765cc26f2c" prot="public" static="no">
        <type><ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; double &gt;</type>
        <definition>typedef Vec3&lt;double&gt; Vec3d</definition>
        <argsstring></argsstring>
        <name>Vec3d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="93" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_vec_8hpp_1a89609394e25ab0e1acccd6e2a0a50055" prot="public" static="no">
        <type><ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; int &gt;</type>
        <definition>typedef Vec3&lt;int&gt; Vec3i</definition>
        <argsstring></argsstring>
        <name>Vec3i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="94" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_vec_8hpp_1ac1c4cd00167ed98e70b8dae0131297df" prot="public" static="no">
        <type><ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; long long &gt;</type>
        <definition>typedef Vec3&lt;long long&gt; Vec3l</definition>
        <argsstring></argsstring>
        <name>Vec3l</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="95" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_vec_8hpp_1a5bba51046f8678fc315d18709ac24dab" prot="public" static="no">
        <type><ref refid="struct_vec2" kindref="compound">Vec2</ref>&lt; float &gt;</type>
        <definition>typedef Vec2&lt;float&gt; Vec2f</definition>
        <argsstring></argsstring>
        <name>Vec2f</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="97" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_vec_8hpp_1a5d9960b44dec6cd115402d1266d8d946" prot="public" static="no">
        <type><ref refid="struct_vec2" kindref="compound">Vec2</ref>&lt; double &gt;</type>
        <definition>typedef Vec2&lt;double&gt; Vec2d</definition>
        <argsstring></argsstring>
        <name>Vec2d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="98" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_vec_8hpp_1a3fad0e3d3511071aeb1ddb2ebff1db58" prot="public" static="no">
        <type><ref refid="struct_vec2" kindref="compound">Vec2</ref>&lt; int &gt;</type>
        <definition>typedef Vec2&lt;int&gt; Vec2i</definition>
        <argsstring></argsstring>
        <name>Vec2i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="99" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_vec_8hpp_1a7fc9840095007916e432f63ef64cc4d8" prot="public" static="no">
        <type><ref refid="struct_vec2" kindref="compound">Vec2</ref>&lt; long long &gt;</type>
        <definition>typedef Vec2&lt;long long&gt; Vec2l</definition>
        <argsstring></argsstring>
        <name>Vec2l</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="100" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_vec_8hpp_1a58856e2d33c314e592ceed4f297e1b6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class G</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; G &gt;</type>
        <definition>Vec3&lt;G&gt; operator-</definition>
        <argsstring>(Vec3&lt; G &gt; v)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; G &gt;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="81" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="_vec_8hpp_1aca0f7947079f701001d7beee5e48185c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class G</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_vec2" kindref="compound">Vec2</ref>&lt; G &gt;</type>
        <definition>Vec2&lt;G&gt; operator-</definition>
        <argsstring>(Vec2&lt; G &gt; v)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="struct_vec2" kindref="compound">Vec2</ref>&lt; G &gt;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="82" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="_vec_8hpp_1a89ce39d80de6e0d6ea7085eff17c9d11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class G</type>
          </param>
          <param>
            <type>class N</type>
          </param>
          <param>
            <type>class M</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double mixedProduct</definition>
        <argsstring>(const Vec3&lt; G &gt; v, const Vec3&lt; N &gt; u, const Vec3&lt; M &gt; w)</argsstring>
        <name>mixedProduct</name>
        <param>
          <type>const <ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; G &gt;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; N &gt;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; M &gt;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="84" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="_vec_8hpp_1afb4316fdff9c2e3e932e94e1f3ba2ff1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class G</type>
          </param>
          <param>
            <type>class N</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double distance</definition>
        <argsstring>(const Vec3&lt; G &gt; v, const Vec3&lt; N &gt; u=Vec3&lt; N &gt;())</argsstring>
        <name>distance</name>
        <param>
          <type>const <ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; G &gt;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; N &gt;</type>
          <declname>u</declname>
          <defval><ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; N &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="85" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="85" bodyend="85"/>
        <references refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" compoundref="_vec_8hpp" startline="7">Vec3&lt; T &gt;::x</references>
        <references refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" compoundref="_vec_8hpp" startline="7">Vec3&lt; T &gt;::y</references>
        <references refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" compoundref="_vec_8hpp" startline="7">Vec3&lt; T &gt;::z</references>
      </memberdef>
      <memberdef kind="function" id="_vec_8hpp_1a5e8aa63c73f6ac775322dd0f56e5431d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class G</type>
          </param>
          <param>
            <type>class N</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double angle</definition>
        <argsstring>(const Vec3&lt; G &gt; v, const Vec3&lt; N &gt; u)</argsstring>
        <name>angle</name>
        <param>
          <type>const <ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; G &gt;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="struct_vec3" kindref="compound">Vec3</ref>&lt; N &gt;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="86" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="86" bodyend="86"/>
        <references refid="struct_vec3_1ac78863777884b592abb605ff3a605873" compoundref="_vec_8hpp" startline="20" endline="20">Vec3&lt; T &gt;::distance</references>
      </memberdef>
      <memberdef kind="function" id="_vec_8hpp_1a647ac4aa5d6e46f61b06b95b199955c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class G</type>
          </param>
          <param>
            <type>class N</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double distance</definition>
        <argsstring>(const Vec2&lt; G &gt; v, const Vec2&lt; N &gt; u=Vec2&lt; N &gt;())</argsstring>
        <name>distance</name>
        <param>
          <type>const <ref refid="struct_vec2" kindref="compound">Vec2</ref>&lt; G &gt;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="struct_vec2" kindref="compound">Vec2</ref>&lt; N &gt;</type>
          <declname>u</declname>
          <defval><ref refid="struct_vec2" kindref="compound">Vec2</ref>&lt; N &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="88" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="88" bodyend="88"/>
        <references refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" compoundref="_vec_8hpp" startline="46">Vec2&lt; T &gt;::x</references>
        <references refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" compoundref="_vec_8hpp" startline="46">Vec2&lt; T &gt;::y</references>
      </memberdef>
      <memberdef kind="function" id="_vec_8hpp_1ac0ffa07f4206b7f8587d4c7e81d77fed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class G</type>
          </param>
          <param>
            <type>class N</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>static double angle</definition>
        <argsstring>(const Vec2&lt; G &gt; v, const Vec2&lt; N &gt; u)</argsstring>
        <name>angle</name>
        <param>
          <type>const <ref refid="struct_vec2" kindref="compound">Vec2</ref>&lt; G &gt;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="struct_vec2" kindref="compound">Vec2</ref>&lt; N &gt;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" line="89" column="1" bodyfile="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp" bodystart="89" bodyend="89"/>
        <references refid="struct_vec2_1a8f0f08fa249195af341222553c8db855" compoundref="_vec_8hpp" startline="58" endline="58">Vec2&lt; T &gt;::distance</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>VEC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VEC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="struct_vec3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_vec3" kindref="compound">Vec3</ref>{</highlight></codeline>
<codeline lineno="7" refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>,<sp/><ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>,<sp/><ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="struct_vec3_1a7c150f37ecfa78ced8b83bd95908cc33" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vec3_1a7c150f37ecfa78ced8b83bd95908cc33" kindref="member">Vec3</ref>():x(0),<sp/>y(0),<sp/>z(0){}</highlight></codeline>
<codeline lineno="10" refid="struct_vec3_1ab5e07fff614504292d74e3d7f29fe6f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vec3_1ab5e07fff614504292d74e3d7f29fe6f9" kindref="member">Vec3</ref>(T<sp/>_x,<sp/>T<sp/>_y,<sp/>T<sp/>_z):x(_x),<sp/>y(_y),<sp/>z(_z){}</highlight></codeline>
<codeline lineno="11" refid="struct_vec3_1a8d0c4c2050b2784999cb991ec65c909d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vec3_1a8d0c4c2050b2784999cb991ec65c909d" kindref="member">Vec3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref><sp/>&amp;v){x=v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>;<sp/>y=v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>;<sp/>z=v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>;}</highlight></codeline>
<codeline lineno="12" refid="struct_vec3_1ab065f613072cf03bae74e0398fe03819" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1ab065f613072cf03bae74e0398fe03819" kindref="member">clear</ref>(){x=0;y=0;z=0;}</highlight></codeline>
<codeline lineno="13" refid="struct_vec3_1aaa52699051347366ad9836673b688c0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1aaa52699051347366ad9836673b688c0f" kindref="member">normalize</ref>(){</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>temp<sp/>=<sp/><ref refid="struct_vec3_1ac78863777884b592abb605ff3a605873" kindref="member">distance</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x/=temp;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y/=temp;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z/=temp;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20" refid="struct_vec3_1ac78863777884b592abb605ff3a605873" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1ac78863777884b592abb605ff3a605873" kindref="member">distance</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1ac78863777884b592abb605ff3a605873" kindref="member">distance</ref>(<ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref>());}</highlight></codeline>
<codeline lineno="21" refid="struct_vec3_1a54cf6d04efc4cd495d9bf30a85cbaa36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1a54cf6d04efc4cd495d9bf30a85cbaa36" kindref="member">angle</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1a54cf6d04efc4cd495d9bf30a85cbaa36" kindref="member">angle</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref>());}</highlight></codeline>
<codeline lineno="22" refid="struct_vec3_1ad3b8a18c348e470cdebf4c05b88c73ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1ad3b8a18c348e470cdebf4c05b88c73ae" kindref="member">distance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt((x-v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>)*(x-v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>)+(y-v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>)*(y-v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>)+(z-v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>)*(z-v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>));}</highlight></codeline>
<codeline lineno="23" refid="struct_vec3_1a33fb3a5de6f17cc4cfb50af46881ad97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1a33fb3a5de6f17cc4cfb50af46881ad97" kindref="member">angle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1a33fb3a5de6f17cc4cfb50af46881ad97" kindref="member">angle</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>v);}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="struct_vec3_1a136910239c8767d8ddda099c4e447b72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref><sp/><ref refid="struct_vec3_1a136910239c8767d8ddda099c4e447b72" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref>(x+v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>,<sp/>y+v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>,<sp/>z+v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>);}</highlight></codeline>
<codeline lineno="26" refid="struct_vec3_1a401a0c33c4ebff4b78590a6c5a010f3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref><sp/><ref refid="struct_vec3_1a401a0c33c4ebff4b78590a6c5a010f3d" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref>(x-v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>,<sp/>y-v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>,<sp/>z-v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>);}</highlight></codeline>
<codeline lineno="27" refid="struct_vec3_1aedc6a75a9cc9b09269dfb9c603e6d67b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref><sp/><ref refid="struct_vec3_1aedc6a75a9cc9b09269dfb9c603e6d67b" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G<sp/>d)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref>(x*d,<sp/>y*d,<sp/>z*d);}</highlight></codeline>
<codeline lineno="28" refid="struct_vec3_1a3f28aeaac3b37939603048919f07c901" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref><sp/><ref refid="struct_vec3_1a3f28aeaac3b37939603048919f07c901" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G<sp/>d)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref>(x/d,<sp/>y/d,<sp/>z/d);}</highlight></codeline>
<codeline lineno="29" refid="struct_vec3_1a544cfb7946d54665b9a93925595141a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/>T<sp/><ref refid="struct_vec3_1a544cfb7946d54665b9a93925595141a5" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x*v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref><sp/>+<sp/>y*v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref><sp/>+<sp/>z*v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>;}</highlight></codeline>
<codeline lineno="30" refid="struct_vec3_1a67250f3142016b46ca1fe6d2aa260bdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref><sp/><ref refid="struct_vec3_1a67250f3142016b46ca1fe6d2aa260bdb" kindref="member">operator^</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref>(y*v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref><sp/>-<sp/>z*v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>,<sp/>x*v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref><sp/>-<sp/>z*v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>,<sp/>x*v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref><sp/>-<sp/>y*v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>);}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="struct_vec3_1a6357cc8bedaf8e78802e498543995370" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref><sp/><ref refid="struct_vec3_1a6357cc8bedaf8e78802e498543995370" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v){x=v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>;<sp/>y=v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>;<sp/>z=v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="33" refid="struct_vec3_1a5268deb77835e359316ce9312e6d78b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref><sp/><ref refid="struct_vec3_1a5268deb77835e359316ce9312e6d78b8" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v){x+=v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>;<sp/>y+=v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>;<sp/>z+=v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="34" refid="struct_vec3_1a7e8380546b7a07f5a42ddc618843009c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref><sp/><ref refid="struct_vec3_1a7e8380546b7a07f5a42ddc618843009c" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v){x-=v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>;<sp/>y-=v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>;<sp/>z-=v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="35" refid="struct_vec3_1ab538e8b150f236bf307f4069a48e2f58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref><sp/><ref refid="struct_vec3_1ab538e8b150f236bf307f4069a48e2f58" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G<sp/>d){x*=d;<sp/>y*=d;<sp/>z*=d;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="36" refid="struct_vec3_1a029288940a55ee43531803fcdc8ae6ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref><sp/><ref refid="struct_vec3_1a029288940a55ee43531803fcdc8ae6ef" kindref="member">operator/=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G<sp/>d){x/=d;<sp/>y/=d;<sp/>z/=d;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="37" refid="struct_vec3_1a92f13cfa00d9e63703b45876fde2ac08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;T&gt;</ref><sp/><ref refid="struct_vec3_1a92f13cfa00d9e63703b45876fde2ac08" kindref="member">operator^=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">=*</highlight><highlight class="keyword">this</highlight><highlight class="normal">^v;}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="struct_vec3_1a163682ec6216cdf90e82e50640e78966" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1a163682ec6216cdf90e82e50640e78966" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x==v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref><sp/>&amp;&amp;<sp/>y==v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref><sp/>&amp;&amp;<sp/>z==v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>;}</highlight></codeline>
<codeline lineno="40" refid="struct_vec3_1ac4f213839d154e0a42f137ca03b17f5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1ac4f213839d154e0a42f137ca03b17f5a" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x!=v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref><sp/>||<sp/>y!=v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref><sp/>||<sp/>z!=v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>;}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="struct_vec3_1a77f8546fed96aae205892e2989c16056" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref>(<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>,<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>);}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="struct_vec2" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_vec2" kindref="compound">Vec2</ref>{</highlight></codeline>
<codeline lineno="46" refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>,<sp/><ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="struct_vec2_1a0d51ef92a3baedc006bca6a702cefc65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vec2_1a0d51ef92a3baedc006bca6a702cefc65" kindref="member">Vec2</ref>():x(0),<sp/>y(0){}</highlight></codeline>
<codeline lineno="49" refid="struct_vec2_1ae4f3417996d97ced63c14896d50c86f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vec2_1ae4f3417996d97ced63c14896d50c86f9" kindref="member">Vec2</ref>(T<sp/>_x,<sp/>T<sp/>_y):x(_x),<sp/>y(_y){}</highlight></codeline>
<codeline lineno="50" refid="struct_vec2_1a75d06e735d280d9812a8bc1d2ecb4e94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vec2_1a75d06e735d280d9812a8bc1d2ecb4e94" kindref="member">Vec2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2</ref><sp/>&amp;v){x=v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref>;<sp/>y=v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>;}</highlight></codeline>
<codeline lineno="51" refid="struct_vec2_1ad4be6924a3e7e61a5b97c33efa9541ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_vec2_1ad4be6924a3e7e61a5b97c33efa9541ca" kindref="member">clear</ref>(){x=0;y=0;}</highlight></codeline>
<codeline lineno="52" refid="struct_vec2_1a73f59613a791abd955bf16fccd53777b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_vec2_1a73f59613a791abd955bf16fccd53777b" kindref="member">normalize</ref>(){</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>temp<sp/>=<sp/><ref refid="struct_vec3_1ac78863777884b592abb605ff3a605873" kindref="member">distance</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x/=temp;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y/=temp;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58" refid="struct_vec2_1a8f0f08fa249195af341222553c8db855" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_vec2_1a8f0f08fa249195af341222553c8db855" kindref="member">distance</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec2_1a8f0f08fa249195af341222553c8db855" kindref="member">distance</ref>(<ref refid="struct_vec2" kindref="compound">Vec2&lt;T&gt;</ref>());}</highlight></codeline>
<codeline lineno="59" refid="struct_vec2_1a7f614c509f46b773f169fe8b2d03ecbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_vec2_1a7f614c509f46b773f169fe8b2d03ecbb" kindref="member">angle</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec2_1a7f614c509f46b773f169fe8b2d03ecbb" kindref="member">angle</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;T&gt;</ref>());}</highlight></codeline>
<codeline lineno="60" refid="struct_vec2_1a652b5381d256205d1f315551c223c161" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/>T<sp/><ref refid="struct_vec2_1a652b5381d256205d1f315551c223c161" kindref="member">distance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt((x-v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref>)*(x-v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref>)+(y-v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>)*(y-v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>));}</highlight></codeline>
<codeline lineno="61" refid="struct_vec2_1a505fa8ae0330a223ee1a3131a0a88c90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/>T<sp/><ref refid="struct_vec2_1a505fa8ae0330a223ee1a3131a0a88c90" kindref="member">angle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec2_1a505fa8ae0330a223ee1a3131a0a88c90" kindref="member">angle</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>v);}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="struct_vec2_1aa9b9f3c8a4b23b9219ec61138e57de9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;T&gt;</ref><sp/><ref refid="struct_vec2_1aa9b9f3c8a4b23b9219ec61138e57de9c" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2</ref>(x+v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref>,<sp/>y+v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>);}</highlight></codeline>
<codeline lineno="64" refid="struct_vec2_1a768e0ecb4deaad2c813560444b157f3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;T&gt;</ref><sp/><ref refid="struct_vec2_1a768e0ecb4deaad2c813560444b157f3e" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2</ref>(x-v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref>,<sp/>y-v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>);}</highlight></codeline>
<codeline lineno="65" refid="struct_vec2_1ad901a2c2e0efc451ddfa5744fe2b3d40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;T&gt;</ref><sp/><ref refid="struct_vec2_1ad901a2c2e0efc451ddfa5744fe2b3d40" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G<sp/>d)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2</ref>(x*d,<sp/>y*d);}</highlight></codeline>
<codeline lineno="66" refid="struct_vec2_1abbe86e589c8d7683a8625eff3ac6a870" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;T&gt;</ref><sp/><ref refid="struct_vec2_1abbe86e589c8d7683a8625eff3ac6a870" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G<sp/>d)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2</ref>(x/d,<sp/>y/d);}</highlight></codeline>
<codeline lineno="67" refid="struct_vec2_1a65e13fd4d70702a572375a8d0f5726f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/>T<sp/><ref refid="struct_vec2_1a65e13fd4d70702a572375a8d0f5726f6" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x*v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref><sp/>+<sp/>y*v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>;}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="struct_vec2_1a23708adfcc804f980c886dc03da6de82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;T&gt;</ref><sp/><ref refid="struct_vec2_1a23708adfcc804f980c886dc03da6de82" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v){x=v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref>;<sp/>y=v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="70" refid="struct_vec2_1aebaa01a21864be8949d01b95aa04b9a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;T&gt;</ref><sp/><ref refid="struct_vec2_1aebaa01a21864be8949d01b95aa04b9a5" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v){x+=v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref>;<sp/>y+=v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="71" refid="struct_vec2_1a6e9ecd6d18f05618dba2112e14d1e71d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;T&gt;</ref><sp/><ref refid="struct_vec2_1a6e9ecd6d18f05618dba2112e14d1e71d" kindref="member">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v){x-=v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref>;<sp/>y-=v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="72" refid="struct_vec2_1a8889b897ee2f797af00328366e66028f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;T&gt;</ref><sp/><ref refid="struct_vec2_1a8889b897ee2f797af00328366e66028f" kindref="member">operator*=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G<sp/>d){x*=d;<sp/>y*=d;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="73" refid="struct_vec2_1a8aca56644471bee30f568f8aa1556cf2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;T&gt;</ref><sp/><ref refid="struct_vec2_1a8aca56644471bee30f568f8aa1556cf2" kindref="member">operator/=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G<sp/>d){x/=d;<sp/>y/=d;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="struct_vec2_1a7e58ef44311b38b7bcb3f3f4993dab7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vec2_1a7e58ef44311b38b7bcb3f3f4993dab7c" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x==v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref><sp/>&amp;&amp;<sp/>y==v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>;}</highlight></codeline>
<codeline lineno="76" refid="struct_vec2_1a0d7091e1b5063ac843796b800523d1a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_vec2_1a0d7091e1b5063ac843796b800523d1a9" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x!=v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref><sp/>||<sp/>y!=v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>;}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="struct_vec2_1a7890655224faa58caf7873ec90810dff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref>(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref>(<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>,<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>);}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="_vec_8hpp_1a58856e2d33c314e592ceed4f297e1b6d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/><ref refid="struct_vec3_1a401a0c33c4ebff4b78590a6c5a010f3d" kindref="member">operator-</ref>(<ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v*(-1);}</highlight></codeline>
<codeline lineno="82" refid="_vec_8hpp_1aca0f7947079f701001d7beee5e48185c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G&gt;<sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/><ref refid="struct_vec3_1a401a0c33c4ebff4b78590a6c5a010f3d" kindref="member">operator-</ref>(<ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v*(-1);}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="_vec_8hpp_1a89ce39d80de6e0d6ea7085eff17c9d11" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>M&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_vec_8hpp_1a89ce39d80de6e0d6ea7085eff17c9d11" kindref="member">mixedProduct</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;N&gt;</ref><sp/>u,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;M&gt;</ref><sp/>w){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v*(u^w);}</highlight></codeline>
<codeline lineno="85" refid="_vec_8hpp_1afb4316fdff9c2e3e932e94e1f3ba2ff1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1ac78863777884b592abb605ff3a605873" kindref="member">distance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;N&gt;</ref><sp/>u=<ref refid="struct_vec3" kindref="compound">Vec3&lt;N&gt;</ref>()){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt((v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>-u.x)*(v.<ref refid="struct_vec3_1aeba95c52e15a5a7476550c1798210db2" kindref="member">x</ref>-u.x)+(v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>-u.y)*(v.<ref refid="struct_vec3_1a76f06eaf078504ac1d09c910ddb24696" kindref="member">y</ref>-u.y)+(v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>-u.z)*(v.<ref refid="struct_vec3_1a0f694311f956380952aee054cbabb8b6" kindref="member">z</ref>-u.z));}</highlight></codeline>
<codeline lineno="86" refid="_vec_8hpp_1a5e8aa63c73f6ac775322dd0f56e5431d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N&gt;<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1a54cf6d04efc4cd495d9bf30a85cbaa36" kindref="member">angle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;G&gt;</ref><sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;N&gt;</ref><sp/>u){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acos((v*u)/(v.<ref refid="struct_vec3_1ac78863777884b592abb605ff3a605873" kindref="member">distance</ref>()*u.distance()));}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="_vec_8hpp_1a647ac4aa5d6e46f61b06b95b199955c9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1ac78863777884b592abb605ff3a605873" kindref="member">distance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;N&gt;</ref><sp/>u=<ref refid="struct_vec2" kindref="compound">Vec2&lt;N&gt;</ref>()){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt((v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref>-u.x)*(v.<ref refid="struct_vec2_1a8ef8f719932c920ac4ce11399c983d53" kindref="member">x</ref>-u.x)+(v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>-u.y)*(v.<ref refid="struct_vec2_1a7ea262a941af6b3abd284ab97658806c" kindref="member">y</ref>-u.y));}</highlight></codeline>
<codeline lineno="89" refid="_vec_8hpp_1ac0ffa07f4206b7f8587d4c7e81d77fed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>G,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>N&gt;<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_vec3_1a54cf6d04efc4cd495d9bf30a85cbaa36" kindref="member">angle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;G&gt;</ref><sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;N&gt;</ref><sp/>u){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acos((v*u)/(v.<ref refid="struct_vec2_1a8f0f08fa249195af341222553c8db855" kindref="member">distance</ref>()*u.distance()));}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="_vec_8hpp_1ab2b69827ad7e42df1b74a25da1b3db8d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;float&gt;</ref><sp/><ref refid="_vec_8hpp_1ab2b69827ad7e42df1b74a25da1b3db8d" kindref="member">Vec3f</ref>;</highlight></codeline>
<codeline lineno="93" refid="_vec_8hpp_1ac7030f700e7e312e526c66765cc26f2c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;double&gt;</ref><sp/><ref refid="_vec_8hpp_1ac7030f700e7e312e526c66765cc26f2c" kindref="member">Vec3d</ref>;</highlight></codeline>
<codeline lineno="94" refid="_vec_8hpp_1a89609394e25ab0e1acccd6e2a0a50055" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;int&gt;</ref><sp/><ref refid="_vec_8hpp_1a89609394e25ab0e1acccd6e2a0a50055" kindref="member">Vec3i</ref>;</highlight></codeline>
<codeline lineno="95" refid="_vec_8hpp_1ac1c4cd00167ed98e70b8dae0131297df" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_vec3" kindref="compound">Vec3&lt;long long&gt;</ref><sp/><ref refid="_vec_8hpp_1ac1c4cd00167ed98e70b8dae0131297df" kindref="member">Vec3l</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="_vec_8hpp_1a5bba51046f8678fc315d18709ac24dab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;float&gt;</ref><sp/><ref refid="_vec_8hpp_1a5bba51046f8678fc315d18709ac24dab" kindref="member">Vec2f</ref>;</highlight></codeline>
<codeline lineno="98" refid="_vec_8hpp_1a5d9960b44dec6cd115402d1266d8d946" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;double&gt;</ref><sp/><ref refid="_vec_8hpp_1a5d9960b44dec6cd115402d1266d8d946" kindref="member">Vec2d</ref>;</highlight></codeline>
<codeline lineno="99" refid="_vec_8hpp_1a3fad0e3d3511071aeb1ddb2ebff1db58" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;int&gt;</ref><sp/><ref refid="_vec_8hpp_1a3fad0e3d3511071aeb1ddb2ebff1db58" kindref="member">Vec2i</ref>;</highlight></codeline>
<codeline lineno="100" refid="_vec_8hpp_1a7fc9840095007916e432f63ef64cc4d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_vec2" kindref="compound">Vec2&lt;long long&gt;</ref><sp/><ref refid="_vec_8hpp_1a7fc9840095007916e432f63ef64cc4d8" kindref="member">Vec2l</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>VEC_H</highlight></codeline>
    </programlisting>
    <location file="C:/Users/ivancea/Desktop/github/TowerDefense/Vec.hpp"/>
  </compounddef>
</doxygen>
